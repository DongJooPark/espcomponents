name: Update latest Release

on:
  release:
  workflow_dispatch:

jobs:
  update-latest:
    runs-on: ubuntu-latest
    steps:
      - name: Update or Create latest Release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const latestTag = 'latest';
            let currentRelease;
            console.log("Fetching the latest release using the API");
            try {
              const latestResponse = await github.rest.repos.getLatestRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
              });
              currentRelease = latestResponse.data;
            } catch (error) {
              throw new Error("No published release found to update latest");
            }
            console.log("Current Release:", currentRelease);
            let currentSha = currentRelease.target_commitish;
            if (currentSha.length !== 40) {
              console.log(`Fetching commit SHA for branch: ${currentSha}`);
              const branchInfo = await github.rest.repos.getBranch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                branch: currentSha
              });
              currentSha = branchInfo.data.commit.sha;
              console.log(`Found commit SHA: ${currentSha}`);
            }
            try {
              await github.rest.git.updateRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `tags/${latestTag}`,
                sha: currentSha,    // SHA를 사용
                force: true,
              });
              console.log('Updated tag latest');
            } catch (error) {
              await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/tags/${latestTag}`,
                sha: currentSha,    // SHA를 사용
              });
              console.log('Created tag latest');
            }
